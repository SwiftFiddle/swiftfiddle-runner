name: Deploy snapshot runners
on:
  schedule:
    - cron: "0 15 * * *"
  workflow_dispatch:

env:
  AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
  CLUSTER_NAME: swiftfiddle
  RESOURCE_GROUP: swiftfiddle

jobs:
  matrix:
    runs-on: ubuntu-latest
    outputs:
      versionGroup: ${{ steps.set-matrix.outputs.versionGroup }}
    steps:
      - uses: actions/checkout@v2

      - id: set-matrix
        run: |
          versionGroup=$(
            cat versions.json \
            | jq '.[] | map(select(startswith("nightly"))) | flatten[]' \
            | jq -s . \
            | jq '. | map("\\\"" + . + "\\\"") | join(",")' \
            | jq -s \
            | tr -d "\n"
          )
          echo "::set-output name=versionGroup::$versionGroup"

  deploy:
    runs-on: ubuntu-latest
    needs: matrix
    strategy:
      fail-fast: false
      matrix:
        versionGroup: ${{ fromJson(needs.matrix.outputs.versionGroup) }}
    steps:
      - uses: actions/checkout@v2

      - uses: azure/setup-kubectl@v1

      - uses: azure/aks-set-context@v1
        with:
          creds: ${{ env.AZURE_CREDENTIALS }}
          cluster-name: ${{ env.CLUSTER_NAME }}
          resource-group: ${{ env.RESOURCE_GROUP }}

      - name: Deploy
        run: |
          set -ex

          rm -f k8s/pod.yaml

          version=$(echo [${{ matrix.versionGroup }}] | jq -r '.[0]')
          name="runner-v$(sed 's/\.//g' <<<"$version")"
          timestamp=$(date +%s%3N)

          /bin/bash k8s/pod.yaml.sh "$version" "$name" "$timestamp" | kubectl apply -f -

          kubectl rollout status deployment/$name
          kubectl get services -o wide
