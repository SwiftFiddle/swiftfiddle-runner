name: Deploy snapshot runners
on:
  schedule:
    - cron: "0 15 * * *"
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT }}
  GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
  GKE_CLUSTER: swiftfiddle-cluster
  GKE_ZONE: us-central1-c

jobs:
  matrix:
    runs-on: ubuntu-latest
    outputs:
      versionGroup: ${{ steps.set-matrix.outputs.versionGroup }}
    steps:
      - uses: actions/checkout@v2

      - id: set-matrix
        run: |
          versionGroup=$(
            cat versions.json \
            | jq '.[] | map(select(startswith("nightly"))) | flatten[]' \
            | jq -s . \
            | jq '. | map("\\\"" + . + "\\\"") | join(",")' \
            | jq -s \
            | tr -d "\n"
          )
          echo "::set-output name=versionGroup::$versionGroup"

  deploy:
    runs-on: ubuntu-latest
    needs: matrix
    strategy:
      fail-fast: false
      matrix:
        versionGroup: ${{ fromJson(needs.matrix.outputs.versionGroup) }}
    steps:
      - uses: actions/checkout@v2

      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.1
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ env.GCP_SA_KEY }}
          export_default_credentials: true

      - uses: google-github-actions/get-gke-credentials@v0.3.0
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
          credentials: ${{ env.GCP_SA_KEY }}

      - name: Deploy
        run: |
          set -ex

          rm -f k8s/pod.yaml

          version=$(echo [${{ matrix.versionGroup }}] | jq -r '.[0]')
          name="runner-v$(sed 's/\.//g' <<<"$version")"

          /bin/bash k8s/pod.yaml.sh "$version" "$name" | kubectl apply -f -

          kubectl rollout status deployment/$name
          kubectl get services -o wide
