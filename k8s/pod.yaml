apiVersion: v1
kind: Service
metadata:
  name: runner-v541
  annotations:
    cloud.google.com/backend-config: '{"ports": {"80": "runner-v541-backendconfig"}}'
spec:
  selector:
    app.kubernetes.io/name: runner-v541
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: NodePort
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: runner-v541-backendconfig
spec:
  timeoutSec: 660
  connectionDraining:
    drainingTimeoutSec: 720
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: runner-v541
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: runner-v541
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: AverageValue
          averageValue: 400m
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 500Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: runner-v541
  labels:
    app.kubernetes.io/name: runner-v541
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: runner-v541
  minReadySeconds: 60
  progressDeadlineSeconds: 7200
  template:
    metadata:
      labels:
        app.kubernetes.io/name: runner-v541
      annotations:
        commit_sha: "0f1af39f2c90544daffe551a7a01535fe1bf41c2"
        timestamp: "1629172903346"
    spec:
      containers:
        - image: us.gcr.io/swift-playground-fbe87/runner:5.4.1
          name: runner-v541
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          startupProbe:
            httpGet:
              path: /runner/5.4.1/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          livenessProbe:
            httpGet:
              path: /runner/5.4.1/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 20
            periodSeconds: 60
            failureThreshold: 2
          resources:
            limits:
              cpu: 200m
              memory: 1Gi
            requests:
              cpu: 10m
              memory: 64Mi
          volumeMounts:
            - name: docker-socket
              mountPath: /var/run/docker.sock
            - name: sandbox
              mountPath: /tmp
      volumes:
        - name: docker-socket
          hostPath:
            path: /var/run/docker.sock
        - name: sandbox
          hostPath:
            path: /tmp
      terminationGracePeriodSeconds: 60
---

apiVersion: v1
kind: Service
metadata:
  name: runner-v54
  annotations:
    cloud.google.com/backend-config: '{"ports": {"80": "runner-v54-backendconfig"}}'
spec:
  selector:
    app.kubernetes.io/name: runner-v54
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: NodePort
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: runner-v54-backendconfig
spec:
  timeoutSec: 660
  connectionDraining:
    drainingTimeoutSec: 720
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: runner-v54
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: runner-v54
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: AverageValue
          averageValue: 400m
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 500Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: runner-v54
  labels:
    app.kubernetes.io/name: runner-v54
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: runner-v54
  minReadySeconds: 60
  progressDeadlineSeconds: 7200
  template:
    metadata:
      labels:
        app.kubernetes.io/name: runner-v54
      annotations:
        commit_sha: "0f1af39f2c90544daffe551a7a01535fe1bf41c2"
        timestamp: "1629172903346"
    spec:
      containers:
        - image: us.gcr.io/swift-playground-fbe87/runner:5.4
          name: runner-v54
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          startupProbe:
            httpGet:
              path: /runner/5.4/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          livenessProbe:
            httpGet:
              path: /runner/5.4/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 20
            periodSeconds: 60
            failureThreshold: 2
          resources:
            limits:
              cpu: 200m
              memory: 1Gi
            requests:
              cpu: 10m
              memory: 64Mi
          volumeMounts:
            - name: docker-socket
              mountPath: /var/run/docker.sock
            - name: sandbox
              mountPath: /tmp
      volumes:
        - name: docker-socket
          hostPath:
            path: /var/run/docker.sock
        - name: sandbox
          hostPath:
            path: /tmp
      terminationGracePeriodSeconds: 60
---

apiVersion: v1
kind: Service
metadata:
  name: runner-v533
  annotations:
    cloud.google.com/backend-config: '{"ports": {"80": "runner-v533-backendconfig"}}'
spec:
  selector:
    app.kubernetes.io/name: runner-v533
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: NodePort
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: runner-v533-backendconfig
spec:
  timeoutSec: 660
  connectionDraining:
    drainingTimeoutSec: 720
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: runner-v533
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: runner-v533
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: AverageValue
          averageValue: 400m
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 500Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: runner-v533
  labels:
    app.kubernetes.io/name: runner-v533
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: runner-v533
  minReadySeconds: 60
  progressDeadlineSeconds: 7200
  template:
    metadata:
      labels:
        app.kubernetes.io/name: runner-v533
      annotations:
        commit_sha: "0f1af39f2c90544daffe551a7a01535fe1bf41c2"
        timestamp: "1629172903346"
    spec:
      containers:
        - image: us.gcr.io/swift-playground-fbe87/runner:5.3.3
          name: runner-v533
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          startupProbe:
            httpGet:
              path: /runner/5.3.3/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          livenessProbe:
            httpGet:
              path: /runner/5.3.3/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 20
            periodSeconds: 60
            failureThreshold: 2
          resources:
            limits:
              cpu: 200m
              memory: 1Gi
            requests:
              cpu: 10m
              memory: 64Mi
          volumeMounts:
            - name: docker-socket
              mountPath: /var/run/docker.sock
            - name: sandbox
              mountPath: /tmp
      volumes:
        - name: docker-socket
          hostPath:
            path: /var/run/docker.sock
        - name: sandbox
          hostPath:
            path: /tmp
      terminationGracePeriodSeconds: 60
---

apiVersion: v1
kind: Service
metadata:
  name: runner-v532
  annotations:
    cloud.google.com/backend-config: '{"ports": {"80": "runner-v532-backendconfig"}}'
spec:
  selector:
    app.kubernetes.io/name: runner-v532
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: NodePort
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: runner-v532-backendconfig
spec:
  timeoutSec: 660
  connectionDraining:
    drainingTimeoutSec: 720
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: runner-v532
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: runner-v532
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: AverageValue
          averageValue: 400m
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 500Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: runner-v532
  labels:
    app.kubernetes.io/name: runner-v532
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: runner-v532
  minReadySeconds: 60
  progressDeadlineSeconds: 7200
  template:
    metadata:
      labels:
        app.kubernetes.io/name: runner-v532
      annotations:
        commit_sha: "0f1af39f2c90544daffe551a7a01535fe1bf41c2"
        timestamp: "1629172903346"
    spec:
      containers:
        - image: us.gcr.io/swift-playground-fbe87/runner:5.3.2
          name: runner-v532
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          startupProbe:
            httpGet:
              path: /runner/5.3.2/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          livenessProbe:
            httpGet:
              path: /runner/5.3.2/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 20
            periodSeconds: 60
            failureThreshold: 2
          resources:
            limits:
              cpu: 200m
              memory: 1Gi
            requests:
              cpu: 10m
              memory: 64Mi
          volumeMounts:
            - name: docker-socket
              mountPath: /var/run/docker.sock
            - name: sandbox
              mountPath: /tmp
      volumes:
        - name: docker-socket
          hostPath:
            path: /var/run/docker.sock
        - name: sandbox
          hostPath:
            path: /tmp
      terminationGracePeriodSeconds: 60
---

