apiVersion: v1
kind: Service
metadata:
  name: runner-v542
  annotations:
    cloud.google.com/backend-config: '{"ports": {"80": "runner-v542-backendconfig"}}'
spec:
  selector:
    app.kubernetes.io/name: runner-v542
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: NodePort
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: runner-v542-backendconfig
spec:
  timeoutSec: 660
  connectionDraining:
    drainingTimeoutSec: 720
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: runner-v542
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: runner-v542
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: AverageValue
          averageValue: 100m
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 128Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: runner-v542
  labels:
    app.kubernetes.io/name: runner-v542
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: runner-v542
  minReadySeconds: 60
  progressDeadlineSeconds: 10800
  template:
    metadata:
      labels:
        app.kubernetes.io/name: runner-v542
      annotations:
        commit_sha: "f44ce5f386f921fca23689705d1f07e91d750d07"
        timestamp: "1629226822200"
    spec:
      containers:
        - image: us.gcr.io/swift-playground-fbe87/runner:5.4.2
          name: runner-v542
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          startupProbe:
            httpGet:
              path: /runner/5.4.2/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          livenessProbe:
            httpGet:
              path: /runner/5.4.2/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 20
            periodSeconds: 60
            failureThreshold: 2
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 32Mi
          volumeMounts:
            - name: docker-socket
              mountPath: /var/run/docker.sock
            - name: sandbox
              mountPath: /tmp
      volumes:
        - name: docker-socket
          hostPath:
            path: /var/run/docker.sock
        - name: sandbox
          hostPath:
            path: /tmp
      terminationGracePeriodSeconds: 60
---

apiVersion: v1
kind: Service
metadata:
  name: runner-v541
  annotations:
    cloud.google.com/backend-config: '{"ports": {"80": "runner-v541-backendconfig"}}'
spec:
  selector:
    app.kubernetes.io/name: runner-v541
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: NodePort
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: runner-v541-backendconfig
spec:
  timeoutSec: 660
  connectionDraining:
    drainingTimeoutSec: 720
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: runner-v541
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: runner-v541
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: AverageValue
          averageValue: 100m
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 128Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: runner-v541
  labels:
    app.kubernetes.io/name: runner-v541
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: runner-v541
  minReadySeconds: 60
  progressDeadlineSeconds: 10800
  template:
    metadata:
      labels:
        app.kubernetes.io/name: runner-v541
      annotations:
        commit_sha: "f44ce5f386f921fca23689705d1f07e91d750d07"
        timestamp: "1629226822200"
    spec:
      containers:
        - image: us.gcr.io/swift-playground-fbe87/runner:5.4.1
          name: runner-v541
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          startupProbe:
            httpGet:
              path: /runner/5.4.1/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          livenessProbe:
            httpGet:
              path: /runner/5.4.1/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 20
            periodSeconds: 60
            failureThreshold: 2
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 32Mi
          volumeMounts:
            - name: docker-socket
              mountPath: /var/run/docker.sock
            - name: sandbox
              mountPath: /tmp
      volumes:
        - name: docker-socket
          hostPath:
            path: /var/run/docker.sock
        - name: sandbox
          hostPath:
            path: /tmp
      terminationGracePeriodSeconds: 60
---

apiVersion: v1
kind: Service
metadata:
  name: runner-v54
  annotations:
    cloud.google.com/backend-config: '{"ports": {"80": "runner-v54-backendconfig"}}'
spec:
  selector:
    app.kubernetes.io/name: runner-v54
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: NodePort
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: runner-v54-backendconfig
spec:
  timeoutSec: 660
  connectionDraining:
    drainingTimeoutSec: 720
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: runner-v54
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: runner-v54
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: AverageValue
          averageValue: 100m
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 128Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: runner-v54
  labels:
    app.kubernetes.io/name: runner-v54
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: runner-v54
  minReadySeconds: 60
  progressDeadlineSeconds: 10800
  template:
    metadata:
      labels:
        app.kubernetes.io/name: runner-v54
      annotations:
        commit_sha: "f44ce5f386f921fca23689705d1f07e91d750d07"
        timestamp: "1629226822200"
    spec:
      containers:
        - image: us.gcr.io/swift-playground-fbe87/runner:5.4
          name: runner-v54
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          startupProbe:
            httpGet:
              path: /runner/5.4/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          livenessProbe:
            httpGet:
              path: /runner/5.4/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 20
            periodSeconds: 60
            failureThreshold: 2
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 32Mi
          volumeMounts:
            - name: docker-socket
              mountPath: /var/run/docker.sock
            - name: sandbox
              mountPath: /tmp
      volumes:
        - name: docker-socket
          hostPath:
            path: /var/run/docker.sock
        - name: sandbox
          hostPath:
            path: /tmp
      terminationGracePeriodSeconds: 60
---

apiVersion: v1
kind: Service
metadata:
  name: runner-v533
  annotations:
    cloud.google.com/backend-config: '{"ports": {"80": "runner-v533-backendconfig"}}'
spec:
  selector:
    app.kubernetes.io/name: runner-v533
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: NodePort
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: runner-v533-backendconfig
spec:
  timeoutSec: 660
  connectionDraining:
    drainingTimeoutSec: 720
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: runner-v533
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: runner-v533
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: AverageValue
          averageValue: 100m
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 128Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: runner-v533
  labels:
    app.kubernetes.io/name: runner-v533
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: runner-v533
  minReadySeconds: 60
  progressDeadlineSeconds: 10800
  template:
    metadata:
      labels:
        app.kubernetes.io/name: runner-v533
      annotations:
        commit_sha: "f44ce5f386f921fca23689705d1f07e91d750d07"
        timestamp: "1629226822200"
    spec:
      containers:
        - image: us.gcr.io/swift-playground-fbe87/runner:5.3.3
          name: runner-v533
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          startupProbe:
            httpGet:
              path: /runner/5.3.3/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          livenessProbe:
            httpGet:
              path: /runner/5.3.3/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 20
            periodSeconds: 60
            failureThreshold: 2
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 32Mi
          volumeMounts:
            - name: docker-socket
              mountPath: /var/run/docker.sock
            - name: sandbox
              mountPath: /tmp
      volumes:
        - name: docker-socket
          hostPath:
            path: /var/run/docker.sock
        - name: sandbox
          hostPath:
            path: /tmp
      terminationGracePeriodSeconds: 60
---

apiVersion: v1
kind: Service
metadata:
  name: runner-v532
  annotations:
    cloud.google.com/backend-config: '{"ports": {"80": "runner-v532-backendconfig"}}'
spec:
  selector:
    app.kubernetes.io/name: runner-v532
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: NodePort
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: runner-v532-backendconfig
spec:
  timeoutSec: 660
  connectionDraining:
    drainingTimeoutSec: 720
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: runner-v532
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: runner-v532
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: AverageValue
          averageValue: 100m
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 128Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: runner-v532
  labels:
    app.kubernetes.io/name: runner-v532
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: runner-v532
  minReadySeconds: 60
  progressDeadlineSeconds: 10800
  template:
    metadata:
      labels:
        app.kubernetes.io/name: runner-v532
      annotations:
        commit_sha: "f44ce5f386f921fca23689705d1f07e91d750d07"
        timestamp: "1629226822200"
    spec:
      containers:
        - image: us.gcr.io/swift-playground-fbe87/runner:5.3.2
          name: runner-v532
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          startupProbe:
            httpGet:
              path: /runner/5.3.2/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          livenessProbe:
            httpGet:
              path: /runner/5.3.2/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 20
            periodSeconds: 60
            failureThreshold: 2
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 32Mi
          volumeMounts:
            - name: docker-socket
              mountPath: /var/run/docker.sock
            - name: sandbox
              mountPath: /tmp
      volumes:
        - name: docker-socket
          hostPath:
            path: /var/run/docker.sock
        - name: sandbox
          hostPath:
            path: /tmp
      terminationGracePeriodSeconds: 60
---

apiVersion: v1
kind: Service
metadata:
  name: runner-v531
  annotations:
    cloud.google.com/backend-config: '{"ports": {"80": "runner-v531-backendconfig"}}'
spec:
  selector:
    app.kubernetes.io/name: runner-v531
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: NodePort
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: runner-v531-backendconfig
spec:
  timeoutSec: 660
  connectionDraining:
    drainingTimeoutSec: 720
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: runner-v531
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: runner-v531
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: AverageValue
          averageValue: 100m
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 128Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: runner-v531
  labels:
    app.kubernetes.io/name: runner-v531
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: runner-v531
  minReadySeconds: 60
  progressDeadlineSeconds: 10800
  template:
    metadata:
      labels:
        app.kubernetes.io/name: runner-v531
      annotations:
        commit_sha: "f44ce5f386f921fca23689705d1f07e91d750d07"
        timestamp: "1629226822200"
    spec:
      containers:
        - image: us.gcr.io/swift-playground-fbe87/runner:5.3.1
          name: runner-v531
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          startupProbe:
            httpGet:
              path: /runner/5.3.1/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          livenessProbe:
            httpGet:
              path: /runner/5.3.1/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 20
            periodSeconds: 60
            failureThreshold: 2
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 32Mi
          volumeMounts:
            - name: docker-socket
              mountPath: /var/run/docker.sock
            - name: sandbox
              mountPath: /tmp
      volumes:
        - name: docker-socket
          hostPath:
            path: /var/run/docker.sock
        - name: sandbox
          hostPath:
            path: /tmp
      terminationGracePeriodSeconds: 60
---

apiVersion: v1
kind: Service
metadata:
  name: runner-v53
  annotations:
    cloud.google.com/backend-config: '{"ports": {"80": "runner-v53-backendconfig"}}'
spec:
  selector:
    app.kubernetes.io/name: runner-v53
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: NodePort
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: runner-v53-backendconfig
spec:
  timeoutSec: 660
  connectionDraining:
    drainingTimeoutSec: 720
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: runner-v53
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: runner-v53
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: AverageValue
          averageValue: 100m
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 128Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: runner-v53
  labels:
    app.kubernetes.io/name: runner-v53
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: runner-v53
  minReadySeconds: 60
  progressDeadlineSeconds: 10800
  template:
    metadata:
      labels:
        app.kubernetes.io/name: runner-v53
      annotations:
        commit_sha: "f44ce5f386f921fca23689705d1f07e91d750d07"
        timestamp: "1629226822200"
    spec:
      containers:
        - image: us.gcr.io/swift-playground-fbe87/runner:5.3
          name: runner-v53
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          startupProbe:
            httpGet:
              path: /runner/5.3/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          livenessProbe:
            httpGet:
              path: /runner/5.3/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 20
            periodSeconds: 60
            failureThreshold: 2
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 32Mi
          volumeMounts:
            - name: docker-socket
              mountPath: /var/run/docker.sock
            - name: sandbox
              mountPath: /tmp
      volumes:
        - name: docker-socket
          hostPath:
            path: /var/run/docker.sock
        - name: sandbox
          hostPath:
            path: /tmp
      terminationGracePeriodSeconds: 60
---

apiVersion: v1
kind: Service
metadata:
  name: runner-v525
  annotations:
    cloud.google.com/backend-config: '{"ports": {"80": "runner-v525-backendconfig"}}'
spec:
  selector:
    app.kubernetes.io/name: runner-v525
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: NodePort
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: runner-v525-backendconfig
spec:
  timeoutSec: 660
  connectionDraining:
    drainingTimeoutSec: 720
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: runner-v525
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: runner-v525
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: AverageValue
          averageValue: 100m
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 128Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: runner-v525
  labels:
    app.kubernetes.io/name: runner-v525
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: runner-v525
  minReadySeconds: 60
  progressDeadlineSeconds: 10800
  template:
    metadata:
      labels:
        app.kubernetes.io/name: runner-v525
      annotations:
        commit_sha: "f44ce5f386f921fca23689705d1f07e91d750d07"
        timestamp: "1629226822200"
    spec:
      containers:
        - image: us.gcr.io/swift-playground-fbe87/runner:5.2.5
          name: runner-v525
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          startupProbe:
            httpGet:
              path: /runner/5.2.5/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          livenessProbe:
            httpGet:
              path: /runner/5.2.5/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 20
            periodSeconds: 60
            failureThreshold: 2
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 32Mi
          volumeMounts:
            - name: docker-socket
              mountPath: /var/run/docker.sock
            - name: sandbox
              mountPath: /tmp
      volumes:
        - name: docker-socket
          hostPath:
            path: /var/run/docker.sock
        - name: sandbox
          hostPath:
            path: /tmp
      terminationGracePeriodSeconds: 60
---

apiVersion: v1
kind: Service
metadata:
  name: runner-v524
  annotations:
    cloud.google.com/backend-config: '{"ports": {"80": "runner-v524-backendconfig"}}'
spec:
  selector:
    app.kubernetes.io/name: runner-v524
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: NodePort
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: runner-v524-backendconfig
spec:
  timeoutSec: 660
  connectionDraining:
    drainingTimeoutSec: 720
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: runner-v524
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: runner-v524
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: AverageValue
          averageValue: 100m
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 128Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: runner-v524
  labels:
    app.kubernetes.io/name: runner-v524
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: runner-v524
  minReadySeconds: 60
  progressDeadlineSeconds: 10800
  template:
    metadata:
      labels:
        app.kubernetes.io/name: runner-v524
      annotations:
        commit_sha: "f44ce5f386f921fca23689705d1f07e91d750d07"
        timestamp: "1629226822200"
    spec:
      containers:
        - image: us.gcr.io/swift-playground-fbe87/runner:5.2.4
          name: runner-v524
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          startupProbe:
            httpGet:
              path: /runner/5.2.4/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          livenessProbe:
            httpGet:
              path: /runner/5.2.4/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 20
            periodSeconds: 60
            failureThreshold: 2
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 32Mi
          volumeMounts:
            - name: docker-socket
              mountPath: /var/run/docker.sock
            - name: sandbox
              mountPath: /tmp
      volumes:
        - name: docker-socket
          hostPath:
            path: /var/run/docker.sock
        - name: sandbox
          hostPath:
            path: /tmp
      terminationGracePeriodSeconds: 60
---

apiVersion: v1
kind: Service
metadata:
  name: runner-v523
  annotations:
    cloud.google.com/backend-config: '{"ports": {"80": "runner-v523-backendconfig"}}'
spec:
  selector:
    app.kubernetes.io/name: runner-v523
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: NodePort
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: runner-v523-backendconfig
spec:
  timeoutSec: 660
  connectionDraining:
    drainingTimeoutSec: 720
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: runner-v523
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: runner-v523
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: AverageValue
          averageValue: 100m
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 128Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: runner-v523
  labels:
    app.kubernetes.io/name: runner-v523
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: runner-v523
  minReadySeconds: 60
  progressDeadlineSeconds: 10800
  template:
    metadata:
      labels:
        app.kubernetes.io/name: runner-v523
      annotations:
        commit_sha: "f44ce5f386f921fca23689705d1f07e91d750d07"
        timestamp: "1629226822200"
    spec:
      containers:
        - image: us.gcr.io/swift-playground-fbe87/runner:5.2.3
          name: runner-v523
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          startupProbe:
            httpGet:
              path: /runner/5.2.3/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          livenessProbe:
            httpGet:
              path: /runner/5.2.3/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 20
            periodSeconds: 60
            failureThreshold: 2
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 32Mi
          volumeMounts:
            - name: docker-socket
              mountPath: /var/run/docker.sock
            - name: sandbox
              mountPath: /tmp
      volumes:
        - name: docker-socket
          hostPath:
            path: /var/run/docker.sock
        - name: sandbox
          hostPath:
            path: /tmp
      terminationGracePeriodSeconds: 60
---

apiVersion: v1
kind: Service
metadata:
  name: runner-v522
  annotations:
    cloud.google.com/backend-config: '{"ports": {"80": "runner-v522-backendconfig"}}'
spec:
  selector:
    app.kubernetes.io/name: runner-v522
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: NodePort
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: runner-v522-backendconfig
spec:
  timeoutSec: 660
  connectionDraining:
    drainingTimeoutSec: 720
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: runner-v522
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: runner-v522
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: AverageValue
          averageValue: 100m
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 128Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: runner-v522
  labels:
    app.kubernetes.io/name: runner-v522
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: runner-v522
  minReadySeconds: 60
  progressDeadlineSeconds: 10800
  template:
    metadata:
      labels:
        app.kubernetes.io/name: runner-v522
      annotations:
        commit_sha: "f44ce5f386f921fca23689705d1f07e91d750d07"
        timestamp: "1629226822200"
    spec:
      containers:
        - image: us.gcr.io/swift-playground-fbe87/runner:5.2.2
          name: runner-v522
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          startupProbe:
            httpGet:
              path: /runner/5.2.2/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          livenessProbe:
            httpGet:
              path: /runner/5.2.2/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 20
            periodSeconds: 60
            failureThreshold: 2
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 32Mi
          volumeMounts:
            - name: docker-socket
              mountPath: /var/run/docker.sock
            - name: sandbox
              mountPath: /tmp
      volumes:
        - name: docker-socket
          hostPath:
            path: /var/run/docker.sock
        - name: sandbox
          hostPath:
            path: /tmp
      terminationGracePeriodSeconds: 60
---

apiVersion: v1
kind: Service
metadata:
  name: runner-v521
  annotations:
    cloud.google.com/backend-config: '{"ports": {"80": "runner-v521-backendconfig"}}'
spec:
  selector:
    app.kubernetes.io/name: runner-v521
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: NodePort
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: runner-v521-backendconfig
spec:
  timeoutSec: 660
  connectionDraining:
    drainingTimeoutSec: 720
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: runner-v521
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: runner-v521
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: AverageValue
          averageValue: 100m
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 128Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: runner-v521
  labels:
    app.kubernetes.io/name: runner-v521
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: runner-v521
  minReadySeconds: 60
  progressDeadlineSeconds: 10800
  template:
    metadata:
      labels:
        app.kubernetes.io/name: runner-v521
      annotations:
        commit_sha: "f44ce5f386f921fca23689705d1f07e91d750d07"
        timestamp: "1629226822200"
    spec:
      containers:
        - image: us.gcr.io/swift-playground-fbe87/runner:5.2.1
          name: runner-v521
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          startupProbe:
            httpGet:
              path: /runner/5.2.1/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          livenessProbe:
            httpGet:
              path: /runner/5.2.1/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 20
            periodSeconds: 60
            failureThreshold: 2
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 32Mi
          volumeMounts:
            - name: docker-socket
              mountPath: /var/run/docker.sock
            - name: sandbox
              mountPath: /tmp
      volumes:
        - name: docker-socket
          hostPath:
            path: /var/run/docker.sock
        - name: sandbox
          hostPath:
            path: /tmp
      terminationGracePeriodSeconds: 60
---

apiVersion: v1
kind: Service
metadata:
  name: runner-v52
  annotations:
    cloud.google.com/backend-config: '{"ports": {"80": "runner-v52-backendconfig"}}'
spec:
  selector:
    app.kubernetes.io/name: runner-v52
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: NodePort
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: runner-v52-backendconfig
spec:
  timeoutSec: 660
  connectionDraining:
    drainingTimeoutSec: 720
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: runner-v52
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: runner-v52
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: AverageValue
          averageValue: 100m
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 128Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: runner-v52
  labels:
    app.kubernetes.io/name: runner-v52
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: runner-v52
  minReadySeconds: 60
  progressDeadlineSeconds: 10800
  template:
    metadata:
      labels:
        app.kubernetes.io/name: runner-v52
      annotations:
        commit_sha: "f44ce5f386f921fca23689705d1f07e91d750d07"
        timestamp: "1629226822200"
    spec:
      containers:
        - image: us.gcr.io/swift-playground-fbe87/runner:5.2
          name: runner-v52
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          startupProbe:
            httpGet:
              path: /runner/5.2/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          livenessProbe:
            httpGet:
              path: /runner/5.2/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 20
            periodSeconds: 60
            failureThreshold: 2
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 32Mi
          volumeMounts:
            - name: docker-socket
              mountPath: /var/run/docker.sock
            - name: sandbox
              mountPath: /tmp
      volumes:
        - name: docker-socket
          hostPath:
            path: /var/run/docker.sock
        - name: sandbox
          hostPath:
            path: /tmp
      terminationGracePeriodSeconds: 60
---

apiVersion: v1
kind: Service
metadata:
  name: runner-v51
  annotations:
    cloud.google.com/backend-config: '{"ports": {"80": "runner-v51-backendconfig"}}'
spec:
  selector:
    app.kubernetes.io/name: runner-v51
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: NodePort
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: runner-v51-backendconfig
spec:
  timeoutSec: 660
  connectionDraining:
    drainingTimeoutSec: 720
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: runner-v51
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: runner-v51
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: AverageValue
          averageValue: 100m
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 128Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: runner-v51
  labels:
    app.kubernetes.io/name: runner-v51
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: runner-v51
  minReadySeconds: 60
  progressDeadlineSeconds: 10800
  template:
    metadata:
      labels:
        app.kubernetes.io/name: runner-v51
      annotations:
        commit_sha: "f44ce5f386f921fca23689705d1f07e91d750d07"
        timestamp: "1629226822200"
    spec:
      containers:
        - image: us.gcr.io/swift-playground-fbe87/runner:5.1
          name: runner-v51
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          startupProbe:
            httpGet:
              path: /runner/5.1/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          livenessProbe:
            httpGet:
              path: /runner/5.1/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 20
            periodSeconds: 60
            failureThreshold: 2
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 32Mi
          volumeMounts:
            - name: docker-socket
              mountPath: /var/run/docker.sock
            - name: sandbox
              mountPath: /tmp
      volumes:
        - name: docker-socket
          hostPath:
            path: /var/run/docker.sock
        - name: sandbox
          hostPath:
            path: /tmp
      terminationGracePeriodSeconds: 60
---

apiVersion: v1
kind: Service
metadata:
  name: runner-v50
  annotations:
    cloud.google.com/backend-config: '{"ports": {"80": "runner-v50-backendconfig"}}'
spec:
  selector:
    app.kubernetes.io/name: runner-v50
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: NodePort
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: runner-v50-backendconfig
spec:
  timeoutSec: 660
  connectionDraining:
    drainingTimeoutSec: 720
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: runner-v50
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: runner-v50
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: AverageValue
          averageValue: 100m
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 128Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: runner-v50
  labels:
    app.kubernetes.io/name: runner-v50
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: runner-v50
  minReadySeconds: 60
  progressDeadlineSeconds: 10800
  template:
    metadata:
      labels:
        app.kubernetes.io/name: runner-v50
      annotations:
        commit_sha: "f44ce5f386f921fca23689705d1f07e91d750d07"
        timestamp: "1629226822200"
    spec:
      containers:
        - image: us.gcr.io/swift-playground-fbe87/runner:5.0
          name: runner-v50
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          startupProbe:
            httpGet:
              path: /runner/5.0/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          livenessProbe:
            httpGet:
              path: /runner/5.0/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 20
            periodSeconds: 60
            failureThreshold: 2
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 32Mi
          volumeMounts:
            - name: docker-socket
              mountPath: /var/run/docker.sock
            - name: sandbox
              mountPath: /tmp
      volumes:
        - name: docker-socket
          hostPath:
            path: /var/run/docker.sock
        - name: sandbox
          hostPath:
            path: /tmp
      terminationGracePeriodSeconds: 60
---

apiVersion: v1
kind: Service
metadata:
  name: runner-v42
  annotations:
    cloud.google.com/backend-config: '{"ports": {"80": "runner-v42-backendconfig"}}'
spec:
  selector:
    app.kubernetes.io/name: runner-v42
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: NodePort
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: runner-v42-backendconfig
spec:
  timeoutSec: 660
  connectionDraining:
    drainingTimeoutSec: 720
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: runner-v42
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: runner-v42
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: AverageValue
          averageValue: 100m
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 128Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: runner-v42
  labels:
    app.kubernetes.io/name: runner-v42
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: runner-v42
  minReadySeconds: 60
  progressDeadlineSeconds: 10800
  template:
    metadata:
      labels:
        app.kubernetes.io/name: runner-v42
      annotations:
        commit_sha: "f44ce5f386f921fca23689705d1f07e91d750d07"
        timestamp: "1629226822200"
    spec:
      containers:
        - image: us.gcr.io/swift-playground-fbe87/runner:4.2
          name: runner-v42
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          startupProbe:
            httpGet:
              path: /runner/4.2/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          livenessProbe:
            httpGet:
              path: /runner/4.2/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 20
            periodSeconds: 60
            failureThreshold: 2
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 32Mi
          volumeMounts:
            - name: docker-socket
              mountPath: /var/run/docker.sock
            - name: sandbox
              mountPath: /tmp
      volumes:
        - name: docker-socket
          hostPath:
            path: /var/run/docker.sock
        - name: sandbox
          hostPath:
            path: /tmp
      terminationGracePeriodSeconds: 60
---

apiVersion: v1
kind: Service
metadata:
  name: runner-v40
  annotations:
    cloud.google.com/backend-config: '{"ports": {"80": "runner-v40-backendconfig"}}'
spec:
  selector:
    app.kubernetes.io/name: runner-v40
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: NodePort
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: runner-v40-backendconfig
spec:
  timeoutSec: 660
  connectionDraining:
    drainingTimeoutSec: 720
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: runner-v40
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: runner-v40
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: AverageValue
          averageValue: 100m
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 128Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: runner-v40
  labels:
    app.kubernetes.io/name: runner-v40
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: runner-v40
  minReadySeconds: 60
  progressDeadlineSeconds: 10800
  template:
    metadata:
      labels:
        app.kubernetes.io/name: runner-v40
      annotations:
        commit_sha: "f44ce5f386f921fca23689705d1f07e91d750d07"
        timestamp: "1629226822200"
    spec:
      containers:
        - image: us.gcr.io/swift-playground-fbe87/runner:4.0
          name: runner-v40
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          startupProbe:
            httpGet:
              path: /runner/4.0/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          livenessProbe:
            httpGet:
              path: /runner/4.0/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 20
            periodSeconds: 60
            failureThreshold: 2
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 32Mi
          volumeMounts:
            - name: docker-socket
              mountPath: /var/run/docker.sock
            - name: sandbox
              mountPath: /tmp
      volumes:
        - name: docker-socket
          hostPath:
            path: /var/run/docker.sock
        - name: sandbox
          hostPath:
            path: /tmp
      terminationGracePeriodSeconds: 60
---

apiVersion: v1
kind: Service
metadata:
  name: runner-v30
  annotations:
    cloud.google.com/backend-config: '{"ports": {"80": "runner-v30-backendconfig"}}'
spec:
  selector:
    app.kubernetes.io/name: runner-v30
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: NodePort
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: runner-v30-backendconfig
spec:
  timeoutSec: 660
  connectionDraining:
    drainingTimeoutSec: 720
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: runner-v30
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: runner-v30
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: AverageValue
          averageValue: 100m
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 128Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: runner-v30
  labels:
    app.kubernetes.io/name: runner-v30
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: runner-v30
  minReadySeconds: 60
  progressDeadlineSeconds: 10800
  template:
    metadata:
      labels:
        app.kubernetes.io/name: runner-v30
      annotations:
        commit_sha: "f44ce5f386f921fca23689705d1f07e91d750d07"
        timestamp: "1629226822200"
    spec:
      containers:
        - image: us.gcr.io/swift-playground-fbe87/runner:3.0
          name: runner-v30
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          startupProbe:
            httpGet:
              path: /runner/3.0/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          livenessProbe:
            httpGet:
              path: /runner/3.0/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 20
            periodSeconds: 60
            failureThreshold: 2
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 32Mi
          volumeMounts:
            - name: docker-socket
              mountPath: /var/run/docker.sock
            - name: sandbox
              mountPath: /tmp
      volumes:
        - name: docker-socket
          hostPath:
            path: /var/run/docker.sock
        - name: sandbox
          hostPath:
            path: /tmp
      terminationGracePeriodSeconds: 60
---

apiVersion: v1
kind: Service
metadata:
  name: runner-v22
  annotations:
    cloud.google.com/backend-config: '{"ports": {"80": "runner-v22-backendconfig"}}'
spec:
  selector:
    app.kubernetes.io/name: runner-v22
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: NodePort
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: runner-v22-backendconfig
spec:
  timeoutSec: 660
  connectionDraining:
    drainingTimeoutSec: 720
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: runner-v22
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: runner-v22
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: AverageValue
          averageValue: 100m
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 128Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: runner-v22
  labels:
    app.kubernetes.io/name: runner-v22
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: runner-v22
  minReadySeconds: 60
  progressDeadlineSeconds: 10800
  template:
    metadata:
      labels:
        app.kubernetes.io/name: runner-v22
      annotations:
        commit_sha: "f44ce5f386f921fca23689705d1f07e91d750d07"
        timestamp: "1629226822200"
    spec:
      containers:
        - image: us.gcr.io/swift-playground-fbe87/runner:2.2
          name: runner-v22
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          startupProbe:
            httpGet:
              path: /runner/2.2/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          livenessProbe:
            httpGet:
              path: /runner/2.2/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 20
            periodSeconds: 60
            failureThreshold: 2
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 32Mi
          volumeMounts:
            - name: docker-socket
              mountPath: /var/run/docker.sock
            - name: sandbox
              mountPath: /tmp
      volumes:
        - name: docker-socket
          hostPath:
            path: /var/run/docker.sock
        - name: sandbox
          hostPath:
            path: /tmp
      terminationGracePeriodSeconds: 60
---

apiVersion: v1
kind: Service
metadata:
  name: runner-vnightly-main
  annotations:
    cloud.google.com/backend-config: '{"ports": {"80": "runner-vnightly-main-backendconfig"}}'
spec:
  selector:
    app.kubernetes.io/name: runner-vnightly-main
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: NodePort
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: runner-vnightly-main-backendconfig
spec:
  timeoutSec: 660
  connectionDraining:
    drainingTimeoutSec: 720
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: runner-vnightly-main
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: runner-vnightly-main
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: AverageValue
          averageValue: 100m
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 128Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: runner-vnightly-main
  labels:
    app.kubernetes.io/name: runner-vnightly-main
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: runner-vnightly-main
  minReadySeconds: 60
  progressDeadlineSeconds: 10800
  template:
    metadata:
      labels:
        app.kubernetes.io/name: runner-vnightly-main
      annotations:
        commit_sha: "f44ce5f386f921fca23689705d1f07e91d750d07"
        timestamp: "1629226822200"
    spec:
      containers:
        - image: us.gcr.io/swift-playground-fbe87/runner:nightly-main
          name: runner-vnightly-main
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          startupProbe:
            httpGet:
              path: /runner/nightly-main/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          livenessProbe:
            httpGet:
              path: /runner/nightly-main/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 20
            periodSeconds: 60
            failureThreshold: 2
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 32Mi
          volumeMounts:
            - name: docker-socket
              mountPath: /var/run/docker.sock
            - name: sandbox
              mountPath: /tmp
      volumes:
        - name: docker-socket
          hostPath:
            path: /var/run/docker.sock
        - name: sandbox
          hostPath:
            path: /tmp
      terminationGracePeriodSeconds: 60
---

apiVersion: v1
kind: Service
metadata:
  name: runner-vnightly-55
  annotations:
    cloud.google.com/backend-config: '{"ports": {"80": "runner-vnightly-55-backendconfig"}}'
spec:
  selector:
    app.kubernetes.io/name: runner-vnightly-55
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: NodePort
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: runner-vnightly-55-backendconfig
spec:
  timeoutSec: 660
  connectionDraining:
    drainingTimeoutSec: 720
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: runner-vnightly-55
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: runner-vnightly-55
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: AverageValue
          averageValue: 100m
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 128Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: runner-vnightly-55
  labels:
    app.kubernetes.io/name: runner-vnightly-55
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: runner-vnightly-55
  minReadySeconds: 60
  progressDeadlineSeconds: 10800
  template:
    metadata:
      labels:
        app.kubernetes.io/name: runner-vnightly-55
      annotations:
        commit_sha: "f44ce5f386f921fca23689705d1f07e91d750d07"
        timestamp: "1629226822200"
    spec:
      containers:
        - image: us.gcr.io/swift-playground-fbe87/runner:nightly-5.5
          name: runner-vnightly-55
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          startupProbe:
            httpGet:
              path: /runner/nightly-5.5/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          livenessProbe:
            httpGet:
              path: /runner/nightly-5.5/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 20
            periodSeconds: 60
            failureThreshold: 2
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 32Mi
          volumeMounts:
            - name: docker-socket
              mountPath: /var/run/docker.sock
            - name: sandbox
              mountPath: /tmp
      volumes:
        - name: docker-socket
          hostPath:
            path: /var/run/docker.sock
        - name: sandbox
          hostPath:
            path: /tmp
      terminationGracePeriodSeconds: 60
---

apiVersion: v1
kind: Service
metadata:
  name: runner-vnightly-54
  annotations:
    cloud.google.com/backend-config: '{"ports": {"80": "runner-vnightly-54-backendconfig"}}'
spec:
  selector:
    app.kubernetes.io/name: runner-vnightly-54
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: NodePort
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: runner-vnightly-54-backendconfig
spec:
  timeoutSec: 660
  connectionDraining:
    drainingTimeoutSec: 720
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: runner-vnightly-54
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: runner-vnightly-54
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: AverageValue
          averageValue: 100m
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 128Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: runner-vnightly-54
  labels:
    app.kubernetes.io/name: runner-vnightly-54
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: runner-vnightly-54
  minReadySeconds: 60
  progressDeadlineSeconds: 10800
  template:
    metadata:
      labels:
        app.kubernetes.io/name: runner-vnightly-54
      annotations:
        commit_sha: "f44ce5f386f921fca23689705d1f07e91d750d07"
        timestamp: "1629226822200"
    spec:
      containers:
        - image: us.gcr.io/swift-playground-fbe87/runner:nightly-5.4
          name: runner-vnightly-54
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          startupProbe:
            httpGet:
              path: /runner/nightly-5.4/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          livenessProbe:
            httpGet:
              path: /runner/nightly-5.4/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 20
            periodSeconds: 60
            failureThreshold: 2
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 32Mi
          volumeMounts:
            - name: docker-socket
              mountPath: /var/run/docker.sock
            - name: sandbox
              mountPath: /tmp
      volumes:
        - name: docker-socket
          hostPath:
            path: /var/run/docker.sock
        - name: sandbox
          hostPath:
            path: /tmp
      terminationGracePeriodSeconds: 60
---

apiVersion: v1
kind: Service
metadata:
  name: runner-vnightly-53
  annotations:
    cloud.google.com/backend-config: '{"ports": {"80": "runner-vnightly-53-backendconfig"}}'
spec:
  selector:
    app.kubernetes.io/name: runner-vnightly-53
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: NodePort
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: runner-vnightly-53-backendconfig
spec:
  timeoutSec: 660
  connectionDraining:
    drainingTimeoutSec: 720
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: runner-vnightly-53
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: runner-vnightly-53
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: AverageValue
          averageValue: 100m
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 128Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: runner-vnightly-53
  labels:
    app.kubernetes.io/name: runner-vnightly-53
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: runner-vnightly-53
  minReadySeconds: 60
  progressDeadlineSeconds: 10800
  template:
    metadata:
      labels:
        app.kubernetes.io/name: runner-vnightly-53
      annotations:
        commit_sha: "f44ce5f386f921fca23689705d1f07e91d750d07"
        timestamp: "1629226822200"
    spec:
      containers:
        - image: us.gcr.io/swift-playground-fbe87/runner:nightly-5.3
          name: runner-vnightly-53
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          startupProbe:
            httpGet:
              path: /runner/nightly-5.3/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          livenessProbe:
            httpGet:
              path: /runner/nightly-5.3/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 20
            periodSeconds: 60
            failureThreshold: 2
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 32Mi
          volumeMounts:
            - name: docker-socket
              mountPath: /var/run/docker.sock
            - name: sandbox
              mountPath: /tmp
      volumes:
        - name: docker-socket
          hostPath:
            path: /var/run/docker.sock
        - name: sandbox
          hostPath:
            path: /tmp
      terminationGracePeriodSeconds: 60
---

