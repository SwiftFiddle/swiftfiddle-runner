apiVersion: v1
kind: Service
metadata:
  name: runner-v50
  annotations:
    cloud.google.com/backend-config: '{"ports": {"80": "runner-v50-backendconfig"}}'
spec:
  selector:
    app.kubernetes.io/name: runner-v50
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: NodePort
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: runner-v50-backendconfig
spec:
  timeoutSec: 660
  connectionDraining:
    drainingTimeoutSec: 720
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: runner-v50
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: runner-v50
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: AverageValue
          averageValue: 400m
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 500Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: runner-v50
  labels:
    app.kubernetes.io/name: runner-v50
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: runner-v50
  template:
    metadata:
      labels:
        app.kubernetes.io/name: runner-v50
      annotations:
        commit_sha: "827e2676bc4ba63e58c312fd9f5680043bab20c3"
        timestamp: "1629152702296"
    spec:
      containers:
        - image: swiftfiddle/runner:5.0
          name: runner-v50
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          startupProbe:
            httpGet:
              path: /runner/5.0/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          livenessProbe:
            httpGet:
              path: /runner/5.0/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 20
            periodSeconds: 60
            failureThreshold: 2
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 300m
              memory: 128Mi
          volumeMounts:
            - name: docker-socket
              mountPath: /var/run/docker.sock
            - name: sandbox
              mountPath: /tmp
      volumes:
        - name: docker-socket
          hostPath:
            path: /var/run/docker.sock
        - name: sandbox
          hostPath:
            path: /tmp
---

apiVersion: v1
kind: Service
metadata:
  name: runner-v42
  annotations:
    cloud.google.com/backend-config: '{"ports": {"80": "runner-v42-backendconfig"}}'
spec:
  selector:
    app.kubernetes.io/name: runner-v42
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: NodePort
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: runner-v42-backendconfig
spec:
  timeoutSec: 660
  connectionDraining:
    drainingTimeoutSec: 720
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: runner-v42
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: runner-v42
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: AverageValue
          averageValue: 400m
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 500Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: runner-v42
  labels:
    app.kubernetes.io/name: runner-v42
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: runner-v42
  template:
    metadata:
      labels:
        app.kubernetes.io/name: runner-v42
      annotations:
        commit_sha: "827e2676bc4ba63e58c312fd9f5680043bab20c3"
        timestamp: "1629152702296"
    spec:
      containers:
        - image: swiftfiddle/runner:4.2
          name: runner-v42
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          startupProbe:
            httpGet:
              path: /runner/4.2/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          livenessProbe:
            httpGet:
              path: /runner/4.2/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 20
            periodSeconds: 60
            failureThreshold: 2
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 300m
              memory: 128Mi
          volumeMounts:
            - name: docker-socket
              mountPath: /var/run/docker.sock
            - name: sandbox
              mountPath: /tmp
      volumes:
        - name: docker-socket
          hostPath:
            path: /var/run/docker.sock
        - name: sandbox
          hostPath:
            path: /tmp
---

apiVersion: v1
kind: Service
metadata:
  name: runner-v40
  annotations:
    cloud.google.com/backend-config: '{"ports": {"80": "runner-v40-backendconfig"}}'
spec:
  selector:
    app.kubernetes.io/name: runner-v40
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: NodePort
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: runner-v40-backendconfig
spec:
  timeoutSec: 660
  connectionDraining:
    drainingTimeoutSec: 720
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: runner-v40
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: runner-v40
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: AverageValue
          averageValue: 400m
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 500Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: runner-v40
  labels:
    app.kubernetes.io/name: runner-v40
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: runner-v40
  template:
    metadata:
      labels:
        app.kubernetes.io/name: runner-v40
      annotations:
        commit_sha: "827e2676bc4ba63e58c312fd9f5680043bab20c3"
        timestamp: "1629152702296"
    spec:
      containers:
        - image: swiftfiddle/runner:4.0
          name: runner-v40
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          startupProbe:
            httpGet:
              path: /runner/4.0/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          livenessProbe:
            httpGet:
              path: /runner/4.0/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 20
            periodSeconds: 60
            failureThreshold: 2
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 300m
              memory: 128Mi
          volumeMounts:
            - name: docker-socket
              mountPath: /var/run/docker.sock
            - name: sandbox
              mountPath: /tmp
      volumes:
        - name: docker-socket
          hostPath:
            path: /var/run/docker.sock
        - name: sandbox
          hostPath:
            path: /tmp
---

apiVersion: v1
kind: Service
metadata:
  name: runner-v30
  annotations:
    cloud.google.com/backend-config: '{"ports": {"80": "runner-v30-backendconfig"}}'
spec:
  selector:
    app.kubernetes.io/name: runner-v30
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: NodePort
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: runner-v30-backendconfig
spec:
  timeoutSec: 660
  connectionDraining:
    drainingTimeoutSec: 720
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: runner-v30
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: runner-v30
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: AverageValue
          averageValue: 400m
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 500Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: runner-v30
  labels:
    app.kubernetes.io/name: runner-v30
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: runner-v30
  template:
    metadata:
      labels:
        app.kubernetes.io/name: runner-v30
      annotations:
        commit_sha: "827e2676bc4ba63e58c312fd9f5680043bab20c3"
        timestamp: "1629152702296"
    spec:
      containers:
        - image: swiftfiddle/runner:3.0
          name: runner-v30
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          startupProbe:
            httpGet:
              path: /runner/3.0/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          livenessProbe:
            httpGet:
              path: /runner/3.0/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 20
            periodSeconds: 60
            failureThreshold: 2
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 300m
              memory: 128Mi
          volumeMounts:
            - name: docker-socket
              mountPath: /var/run/docker.sock
            - name: sandbox
              mountPath: /tmp
      volumes:
        - name: docker-socket
          hostPath:
            path: /var/run/docker.sock
        - name: sandbox
          hostPath:
            path: /tmp
---

apiVersion: v1
kind: Service
metadata:
  name: runner-v22
  annotations:
    cloud.google.com/backend-config: '{"ports": {"80": "runner-v22-backendconfig"}}'
spec:
  selector:
    app.kubernetes.io/name: runner-v22
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: NodePort
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: runner-v22-backendconfig
spec:
  timeoutSec: 660
  connectionDraining:
    drainingTimeoutSec: 720
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: runner-v22
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: runner-v22
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: AverageValue
          averageValue: 400m
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 500Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: runner-v22
  labels:
    app.kubernetes.io/name: runner-v22
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: runner-v22
  template:
    metadata:
      labels:
        app.kubernetes.io/name: runner-v22
      annotations:
        commit_sha: "827e2676bc4ba63e58c312fd9f5680043bab20c3"
        timestamp: "1629152702296"
    spec:
      containers:
        - image: swiftfiddle/runner:2.2
          name: runner-v22
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          startupProbe:
            httpGet:
              path: /runner/2.2/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          livenessProbe:
            httpGet:
              path: /runner/2.2/health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 60
            periodSeconds: 300
            failureThreshold: 2
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 20
            periodSeconds: 60
            failureThreshold: 2
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 300m
              memory: 128Mi
          volumeMounts:
            - name: docker-socket
              mountPath: /var/run/docker.sock
            - name: sandbox
              mountPath: /tmp
      volumes:
        - name: docker-socket
          hostPath:
            path: /var/run/docker.sock
        - name: sandbox
          hostPath:
            path: /tmp
---

